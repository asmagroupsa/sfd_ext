# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    instance:
        prefer-ip-address: true
    client:
        service-url:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/
            # http://admin:${jhipster.registry.password}@172.16.100.211:8762/eureka/
            # defaultZone: http://admin:${jhipster.registry.password}@172.16.100.212:8761/eureka/

spring:
    profiles:
        active: prod
        include: swagger, no-liquibase
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:sqlserver://db.sygmacarmes.com;database=sfdDBnew
        username: fnm
        password: c@rmes@2017@**
        # url: jdbc:sqlserver://dev.groupasma.local;database=sfdDB
        # username: sa
        # password: C@rm&s_B@s&_D&v***
        # url: jdbc:sqlserver://iroko.groupasma.local;database=sfdDBNew
        # username: carmes
        # password: c@rmes@2017@**
        # url: jdbc:sqlserver://192.168.32.30\SQL_SERVER_2012;database=sfdDB
        # username: sa
        # password: 2017@c@rmes@***
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.SQLServer2012Dialect
        database: SQL_SERVER
        show-sql: false
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: sfd-prod
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
            hibernate.proc.param_null_passing: true
    # data:
    #     elasticsearch:
    #         cluster-name: elasticsearch
    #         cluster-nodes: localhost:9300
            # cluster-name:
            # cluster-nodes:
            # properties:
            #     path:
            #         logs: elasticsearch/log
            #         data: elasticsearch/data
    mail:
        host: localhost
        port: 25
        username:
        password:
    thymeleaf:
        cache: true
    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
        base-url: http://localhost:9411
        enabled: false
        locator:
            discovery:
                enabled: true

liquibase:
    contexts: prod

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alia: sfd-prod -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: sfd-prod
# ===================================================================
server:
    port: 8383
    # ssl:
    #     key-store: keystore.p12
    #     key-store-password: Password0
    #     keyStoreType: PKCS12
    #     keyAlias: sygmacarmes
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    gateway:
        rate-limiting:
            enabled: false
        authorized-microservices-endpoints: # Access Control Policy, if left empty for a route, all endpoints will be accessible
            app1: /api # recommended prod configuration
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
    cors:
        allowed-origins: "*"
        allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        allowed-headers: "*"
        exposed-headers: "X-Total-Count, Link, Authorization"
        allow-credentials: true
        max-age: 1800
    security:
        authentication:
            jwt:
                secret: fe897a5f3ef3f12126d4103c531241ffd415c9a7
                # Token is valid 24 hours
                token-validity-in-seconds: 3600
                token-validity-in-seconds-for-remember-me: 3600
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: sfd-prod@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite:
            enabled: false
            host: localhost
            port: 2003
            prefix: sfd-prod
        prometheus:
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

application:
logging:
    file: logs/sfd-app.log